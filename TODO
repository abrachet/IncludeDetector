Lexer TODO:
    create a vector for currently known types
        typedef and class/enum/struct will add to these types
        
    parse includes to know when to export symbols versus add types to type vector

    create a lexer for source files which searches for all symbols that aren't known symbols
        for source files, parse the include files to know whcih files are 

    update all functions which call export to call the new export, not the old one

    rework on typedef function, template and namespace (and also using)

Symtable:
    add a mutex for writes to the sym table

    sym_file.c's get_sym_file_path is currently just returning "symfile"
        need to make find a suitable location for the file, as well as refinding where it put it

Exporting:
    dont use a global symbol list, rather export_t should also contain a pointer to a symbol list for which symbols
    can be added. This removes the huge overhead of having to lock a mutex for every single symbol

Argument Handling:
    needs a lot of revamping...

Debug Logging:
    currently the debug logger is breaking build. Need a better way to create a printf like debug logger
    need to compile with -Wno-gnu-zero-variadic-macro-arguments
